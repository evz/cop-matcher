# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-06-13 20:57
from __future__ import unicode_literals
from django.db import migrations
from cases.models import Case, Payment
from settlements.settings import BASE_DIR
from utils.types import intify, parse_str_date
import csv

### START CONFIG ###
infile_path = BASE_DIR + '/data/20160614_migration/payments.csv'
### END CONFIG ###

infile = open(infile_path)
incsv  = csv.DictReader(infile)


def destroy_all_payments(apps,schema_editor):
    """
    because idempotency
    """
    for payment in Payment.objects.all():
        payment.delete()

def load_payments(apps,schema_editor):
    try:
        for line in incsv:
            case    = Case.objects.get(case_no = line['case_num'])
            payment = Payment.objects.create(
                                             case_no              = line['case_num'],
                                             case                 = case,
                                             payee                = line['payee'],
                                             payment              = intify(line['payment']),
                                             fees_costs           = intify(line['fees_costs']),
                                             primary_cause        = line['primary_cause'],
                                             primary_cause_edited = line['primary_cause_edited'],
                                             department           = line['department'],
                                             disposition          = line['disposition'],
                                             disposition_true     = line['disposition_true'],
                                             date_paid            = parse_str_date(line['date_paid']),
                                             misconduct           = True if line['misconduct'].lower() == 'true' else False,
                                            )
            payment.save()
    except Exception, e:
        import ipdb; ipdb.set_trace()
        
class Migration(migrations.Migration):

    dependencies = [
        ('cases', '0004_payment'),
        ('cases', '0007_load_new_cases'),
    ]

    operations = [
            migrations.RunPython(destroy_all_payments),
            migrations.RunPython(load_payments),
    ]
