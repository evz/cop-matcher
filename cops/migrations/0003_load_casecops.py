# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-05-10 22:37
from __future__ import unicode_literals
from django.db import migrations
from settlements.settings import BASE_DIR
import csv
from cases.models import Case
from cops.models import Cop, CaseCop
from utils.types import parse_str_date

def load_casecops(apps,schema_editor):
    infile_path = BASE_DIR + '/data/casecop_mig_dump.csv'
    infile      = open(infile_path)
    incsv       = csv.DictReader(infile)

    case_discard_file_path = 'case_discards.csv'
    case_discard_file      = open(case_discard_file_path,'w')
    case_discard_headers   = ['case_no','casecop_id']
    case_discard_csv       = csv.DictWriter(case_discard_file,case_discard_headers)
    for row in incsv:
        case_lookup = list(Case.objects.filter(case_no=row['case_no']))
        if len(case_lookup) == 0:
            #print 'case not found:', row['case_no']
            case_discard_csv.writerow(
                                      {
                                       'case_no':row['case_no'],
                                       'casecop_id':row['id']
                                      }
                                     )
            continue
        if len(case_lookup) > 1:
            print 'ambiguous case:', row['case_no'], 'has len:', len(case_lookup)
            continue
        else:
            # can only create casecop if we verify there's 1 matching case in cases table
            case = case_lookup[0]
            cc = CaseCop.objects.create(
                                   case = case,
                                   case_no = row['case_no'],
                                   slug = '',
                                   
                                   cop = Cop.objects.get(id=row['cop']) if row['cop'] else None,
                                   cop_first_name = row['cop_first_name'],
                                   cop_middle_initial = row['cop_middle_initial'],
                                   cop_last_name = row['cop_last_name'],
                                   badge_no = row['badge_no'],
                                   officer_atty = row['officer_atty'],
                                   officer_atty_firm = row['officer_atty_firm'],

                                   entered_by = row['entered_by'],
                                   entered_when = parse_str_date(row['entered_when']),
                                   fact_checked_by = row['fact_checked_by'],
                                   fact_checked_when = parse_str_date(row['fact_checked_when']),
                                   matched_by = row['matched_by'],
                                   matched_when = parse_str_date(row['matched_when']),
                                   note = row['note'],
                                   flag = row['flag'] == 'True'
                                  )
            cc.save()

class Migration(migrations.Migration):

    dependencies = [
        ('cops', '0002_load_cops'),
    ]

    operations = [
            migrations.RunPython(load_casecops),
    ]
